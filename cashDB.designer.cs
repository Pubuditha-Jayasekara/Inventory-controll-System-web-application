#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace secretsWebService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="secretsDB")]
	public partial class cashDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertloginTB(loginTB instance);
    partial void UpdateloginTB(loginTB instance);
    partial void DeleteloginTB(loginTB instance);
    partial void InsertuserDetailsTB(userDetailsTB instance);
    partial void UpdateuserDetailsTB(userDetailsTB instance);
    partial void DeleteuserDetailsTB(userDetailsTB instance);
    partial void InsertcustomerDetailsTB(customerDetailsTB instance);
    partial void UpdatecustomerDetailsTB(customerDetailsTB instance);
    partial void DeletecustomerDetailsTB(customerDetailsTB instance);
    partial void InsertitemDetailsTB(itemDetailsTB instance);
    partial void UpdateitemDetailsTB(itemDetailsTB instance);
    partial void DeleteitemDetailsTB(itemDetailsTB instance);
    partial void InsertoutOfStockDeatilsTB(outOfStockDeatilsTB instance);
    partial void UpdateoutOfStockDeatilsTB(outOfStockDeatilsTB instance);
    partial void DeleteoutOfStockDeatilsTB(outOfStockDeatilsTB instance);
    partial void InsertinvoiceTB(invoiceTB instance);
    partial void UpdateinvoiceTB(invoiceTB instance);
    partial void DeleteinvoiceTB(invoiceTB instance);
    partial void InsertDailySalseTB(DailySalseTB instance);
    partial void UpdateDailySalseTB(DailySalseTB instance);
    partial void DeleteDailySalseTB(DailySalseTB instance);
    #endregion
		
		public cashDBDataContext() : 
				base(global::secretsWebService.Properties.Settings.Default.secretsDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public cashDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public cashDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public cashDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public cashDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<loginTB> loginTBs
		{
			get
			{
				return this.GetTable<loginTB>();
			}
		}
		
		public System.Data.Linq.Table<userDetailsTB> userDetailsTBs
		{
			get
			{
				return this.GetTable<userDetailsTB>();
			}
		}
		
		public System.Data.Linq.Table<customerDetailsTB> customerDetailsTBs
		{
			get
			{
				return this.GetTable<customerDetailsTB>();
			}
		}
		
		public System.Data.Linq.Table<itemDetailsTB> itemDetailsTBs
		{
			get
			{
				return this.GetTable<itemDetailsTB>();
			}
		}
		
		public System.Data.Linq.Table<outOfStockDeatilsTB> outOfStockDeatilsTBs
		{
			get
			{
				return this.GetTable<outOfStockDeatilsTB>();
			}
		}
		
		public System.Data.Linq.Table<invoiceTB> invoiceTBs
		{
			get
			{
				return this.GetTable<invoiceTB>();
			}
		}
		
		public System.Data.Linq.Table<DailySalseTB> DailySalseTBs
		{
			get
			{
				return this.GetTable<DailySalseTB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.loginTB")]
	public partial class loginTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _userName;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public loginTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userDetailsTB")]
	public partial class userDetailsTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _userName;
		
		private string _employeeName;
		
		private string _branch;
		
		private string _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnemployeeNameChanging(string value);
    partial void OnemployeeNameChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public userDetailsTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string employeeName
		{
			get
			{
				return this._employeeName;
			}
			set
			{
				if ((this._employeeName != value))
				{
					this.OnemployeeNameChanging(value);
					this.SendPropertyChanging();
					this._employeeName = value;
					this.SendPropertyChanged("employeeName");
					this.OnemployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(MAX)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customerDetailsTB")]
	public partial class customerDetailsTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerID;
		
		private string _name;
		
		private int _telephone;
		
		private string _email;
		
		private string _gender;
		
		private string _addedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerIDChanging(int value);
    partial void OncustomerIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntelephoneChanging(int value);
    partial void OntelephoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnaddedDateChanging(string value);
    partial void OnaddedDateChanged();
    #endregion
		
		public customerDetailsTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Int NOT NULL")]
		public int telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addedDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string addedDate
		{
			get
			{
				return this._addedDate;
			}
			set
			{
				if ((this._addedDate != value))
				{
					this.OnaddedDateChanging(value);
					this.SendPropertyChanging();
					this._addedDate = value;
					this.SendPropertyChanged("addedDate");
					this.OnaddedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemDetailsTB")]
	public partial class itemDetailsTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private string _Name;
		
		private string _Category;
		
		private int _purchesdPrice;
		
		private int _sellingPrice;
		
		private string _image;
		
		private bool _availability;
		
		private string _addedDate;
		
		private string _description;
		
		private string _size;
		
		private int _qty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnpurchesdPriceChanging(int value);
    partial void OnpurchesdPriceChanged();
    partial void OnsellingPriceChanging(int value);
    partial void OnsellingPriceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnavailabilityChanging(bool value);
    partial void OnavailabilityChanged();
    partial void OnaddedDateChanging(string value);
    partial void OnaddedDateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnqtyChanging(int value);
    partial void OnqtyChanged();
    #endregion
		
		public itemDetailsTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchesdPrice", DbType="Int NOT NULL")]
		public int purchesdPrice
		{
			get
			{
				return this._purchesdPrice;
			}
			set
			{
				if ((this._purchesdPrice != value))
				{
					this.OnpurchesdPriceChanging(value);
					this.SendPropertyChanging();
					this._purchesdPrice = value;
					this.SendPropertyChanged("purchesdPrice");
					this.OnpurchesdPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingPrice", DbType="Int NOT NULL")]
		public int sellingPrice
		{
			get
			{
				return this._sellingPrice;
			}
			set
			{
				if ((this._sellingPrice != value))
				{
					this.OnsellingPriceChanging(value);
					this.SendPropertyChanging();
					this._sellingPrice = value;
					this.SendPropertyChanged("sellingPrice");
					this.OnsellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(MAX)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_availability", DbType="Bit NOT NULL")]
		public bool availability
		{
			get
			{
				return this._availability;
			}
			set
			{
				if ((this._availability != value))
				{
					this.OnavailabilityChanging(value);
					this.SendPropertyChanging();
					this._availability = value;
					this.SendPropertyChanged("availability");
					this.OnavailabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addedDate", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string addedDate
		{
			get
			{
				return this._addedDate;
			}
			set
			{
				if ((this._addedDate != value))
				{
					this.OnaddedDateChanging(value);
					this.SendPropertyChanging();
					this._addedDate = value;
					this.SendPropertyChanged("addedDate");
					this.OnaddedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(100)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int NOT NULL")]
		public int qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.outOfStockDeatilsTB")]
	public partial class outOfStockDeatilsTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private int _Item_ID;
		
		private string _Name;
		
		private int _Unit_Price;
		
		private string _Category;
		
		private string _Added_Date;
		
		private string _Stock_Over_Since;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnit_PriceChanging(int value);
    partial void OnUnit_PriceChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnAdded_DateChanging(string value);
    partial void OnAdded_DateChanged();
    partial void OnStock_Over_SinceChanging(string value);
    partial void OnStock_Over_SinceChanged();
    #endregion
		
		public outOfStockDeatilsTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Price", DbType="Int NOT NULL")]
		public int Unit_Price
		{
			get
			{
				return this._Unit_Price;
			}
			set
			{
				if ((this._Unit_Price != value))
				{
					this.OnUnit_PriceChanging(value);
					this.SendPropertyChanging();
					this._Unit_Price = value;
					this.SendPropertyChanged("Unit_Price");
					this.OnUnit_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added_Date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Added_Date
		{
			get
			{
				return this._Added_Date;
			}
			set
			{
				if ((this._Added_Date != value))
				{
					this.OnAdded_DateChanging(value);
					this.SendPropertyChanging();
					this._Added_Date = value;
					this.SendPropertyChanged("Added_Date");
					this.OnAdded_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_Over_Since", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Stock_Over_Since
		{
			get
			{
				return this._Stock_Over_Since;
			}
			set
			{
				if ((this._Stock_Over_Since != value))
				{
					this.OnStock_Over_SinceChanging(value);
					this.SendPropertyChanging();
					this._Stock_Over_Since = value;
					this.SendPropertyChanged("Stock_Over_Since");
					this.OnStock_Over_SinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoiceTB")]
	public partial class invoiceTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Record;
		
		private int _BillNo;
		
		private int _ItemID;
		
		private string _ItemName;
		
		private int _ItemQty;
		
		private int _ItemUnitPrice;
		
		private int _ItemSumPrice;
		
		private string _Cashier;
		
		private string _Branch;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordChanging(int value);
    partial void OnRecordChanged();
    partial void OnBillNoChanging(int value);
    partial void OnBillNoChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemQtyChanging(int value);
    partial void OnItemQtyChanged();
    partial void OnItemUnitPriceChanging(int value);
    partial void OnItemUnitPriceChanged();
    partial void OnItemSumPriceChanging(int value);
    partial void OnItemSumPriceChanged();
    partial void OnCashierChanging(string value);
    partial void OnCashierChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public invoiceTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Record
		{
			get
			{
				return this._Record;
			}
			set
			{
				if ((this._Record != value))
				{
					this.OnRecordChanging(value);
					this.SendPropertyChanging();
					this._Record = value;
					this.SendPropertyChanged("Record");
					this.OnRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="Int NOT NULL")]
		public int BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQty", DbType="Int NOT NULL")]
		public int ItemQty
		{
			get
			{
				return this._ItemQty;
			}
			set
			{
				if ((this._ItemQty != value))
				{
					this.OnItemQtyChanging(value);
					this.SendPropertyChanging();
					this._ItemQty = value;
					this.SendPropertyChanged("ItemQty");
					this.OnItemQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemUnitPrice", DbType="Int NOT NULL")]
		public int ItemUnitPrice
		{
			get
			{
				return this._ItemUnitPrice;
			}
			set
			{
				if ((this._ItemUnitPrice != value))
				{
					this.OnItemUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemUnitPrice = value;
					this.SendPropertyChanged("ItemUnitPrice");
					this.OnItemUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSumPrice", DbType="Int NOT NULL")]
		public int ItemSumPrice
		{
			get
			{
				return this._ItemSumPrice;
			}
			set
			{
				if ((this._ItemSumPrice != value))
				{
					this.OnItemSumPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemSumPrice = value;
					this.SendPropertyChanged("ItemSumPrice");
					this.OnItemSumPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Cashier
		{
			get
			{
				return this._Cashier;
			}
			set
			{
				if ((this._Cashier != value))
				{
					this.OnCashierChanging(value);
					this.SendPropertyChanging();
					this._Cashier = value;
					this.SendPropertyChanged("Cashier");
					this.OnCashierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailySalseTB")]
	public partial class DailySalseTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillNO;
		
		private int _Amount;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillNOChanging(int value);
    partial void OnBillNOChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public DailySalseTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BillNO
		{
			get
			{
				return this._BillNO;
			}
			set
			{
				if ((this._BillNO != value))
				{
					this.OnBillNOChanging(value);
					this.SendPropertyChanging();
					this._BillNO = value;
					this.SendPropertyChanged("BillNO");
					this.OnBillNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
